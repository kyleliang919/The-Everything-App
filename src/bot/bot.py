import apps
import time
import random
import warnings
import undetected_chromedriver as uc

class ChatBot():
    def __init__(self):
        super(self).__init__()
        self.driver = uc.Chrome()
        # this will pop up a chrome showing the login, follow the steps to login manually
        self.driver.get('https://chat.openai.com/chat')
        self.button = None
        self.textarea = None
        while self.button is None and self.textarea is None:
            self.verify_login()
            time.sleep(random.randint(6))

    def verify_login(self):
        # grabbing the text input area and the send button on the chat interface
        re1 = self.driver.find_element("tag name", "textarea")
        re2 = self.driver.find_elements("xpath", "/html/body/div/div/div/main/div[2]/form/div/div[2]/button")
        if len(re1) == 1 and len(re2) == 1:
            self.textarea = re1[0]
            self.button = re2[0]
        else:
            warnings.warn("you are not on the right page, please proceed to the right page")

    def get_chat_response(self, prompt, wait_time = 60):
        response = {"message": None, "code_gen": None, "list_gen": None}
        self.textarea.send_keys(prompt)
        self.button.click()
        time.sleep(wait_time) # This time is necessary because Ajax response, in case the response is not fully generated, 2 minutes should be generous enough
        total_num = len(self.driver.find_elements("xpath", "/html/body/div/div/div[1]/main/div[1]/div/div/div/div")) - 1
        latest_xpath_prefix = "/html/body/div/div/div[1]/main/div[1]/div/div/div/div" + f"[{total_num}]"
        list_of_code_gen = self.driver.find_elements("xpath", latest_xpath_prefix + "//pre")
        if len(list_of_code_gen) == 0:
            response["message"] = self.driver.find_elements("xpath", latest_xpath_prefix + "//p")[0].text
        elif len(list_of_code_gen) == 1:
            code_gen = "# " + self.driver.find_elements("xpath", latest_xpath_prefix + "//pre")[0].text
            response["code_gen"] = code_gen
        else:
            response["message"] = "chatgpt: More than one block of code is generated, please make sure only one block is generated by prompting (ex. Adding a prefix: 'Answer in code only:')"
        list_of_list_gen = self.driver.find_elements("xpath", latest_xpath_prefix + "//li")
        if len(list_of_list_gen) == 0:
            pass
        else:
            response["list_gen"] = [each.text for each in list_of_list_gen]
        return response
        
